get:
  description: "Get an animal by ID"
  parameters:
     - in: path
       $ref: '../../requestParameters/animalId.yaml'
  responses:
    200:
      description: Get animal by ID
      content:
        application/json:
          schema:
            $ref: '../../schemas/animal.yaml'
    400:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '../../schemas/error.yaml'
    406:
      description: Malformed Request
      content:
        application/json:
          schema:
            $ref: '../../schemas/error.yaml'
    500:
      description: Internal Service Error
      content:
        application/json:
          schema:
            $ref: '../../schemas/error.yaml'
  x-amazon-apigateway-integration:
    requestTemplates:
      "application/json": |
            { "path": "$context.path",
              "userArn": "$context.identity.userArn",
              "animalId": "$method.request.path.animalId" }
    passthroughBehavior: "never"
    responses:
      default:
        statusCode: "200"
        responseTemplates:
          "application/json": |
            #set($inputRoot = $input.path('$'))
            #set($jsonBody = $util.parseJson($inputRoot.body))
            {
              "animalId": "$jsonBody.id",
              "animalName": "$jsonBody.name"
            }
      NotFound.*:
        $ref: "../../gatewayResponses/notAcceptable.yaml"
      NotAcceptable.*:
        $ref: "../../gatewayResponses/notFound.yaml"
      .*error.*:
        $ref: "../../gatewayResponses/error.yaml"
    uri:
      Fn::Sub: arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetAnimalByIdLambda.Arn}/invocations
    httpMethod: POST
    type: "aws"
  x-amazon-apigateway-request-validator: "all"